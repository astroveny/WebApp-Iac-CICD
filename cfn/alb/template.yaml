AWSTemplateFormatVersion: '2010-09-09'
Description: |
  WebApp ALB Stack:
  - ALB
    - ipv4
    - internet facing
    - certificate attached from Amazon Certification Manager (ACM)
  - HTTPSListener
    - HTTPS to WebApp Target Group
  - Target Group
  - ALB Security Groups
Parameters:
  NetworkingStack:
    Type: String
    Description: This is our base layer of networking components eg. VPC, Subnets
  CertificateArn:
    Type: String
    Description: ARN of the SSL/TLS certificate for the HTTPS listener
  WebAppPort:
    Type: Number
    Description: Port number on which the WebApp is running
Resources:
  WebAppALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: WebApp-ALB
      Type: application
      Scheme: internet-facing
      IpAddressType: ipv4
      Subnets: !Split
        - ','
        - !ImportValue
          Fn::Sub: ${NetworkingStack}-PublicSubnetIds
      SecurityGroups:
        - !Ref ALBSecurityGroup
      LoadBalancerAttributes:
        - Key: routing.http2.enabled
          Value: true
        - Key: deletion_protection.enabled
          Value: true
        - Key: access_logs.s3.enabled
          Value: false
  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: WebApp-TG
      TargetType: instance
      Port: !Ref WebAppPort
      Protocol: HTTP
      VpcId: !ImportValue
        Fn::Sub: ${NetworkingStack}-VpcId
      HealthCheckProtocol: HTTP
      HealthCheckPath: /HealthCheck
  HTTPSListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref WebAppTargetGroup
      LoadBalancerArn: !Ref WebAppALB
      Port: 443
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-2016-08
      Certificates:
        - CertificateArn: !Ref CertificateArn
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${AWS::StackName}-SG
      GroupDescription: Security group for ALB
      VpcId: !ImportValue
        Fn::Sub: ${NetworkingStack}-VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
Outputs:
  ALBArn:
    Description: ARN of the Application Load Balancer
    Value: !Ref WebAppALB
    Export:
      Name: !Sub ${AWS::StackName}-WebAppALB
  ALBURL:
    Description: The URL of the Application Load Balancer
    Value: !GetAtt WebAppALB.DNSName
    Export:
      Name: !Sub ${AWS::StackName}-ALBURL
  TargetGroupArn:
    Description: ARN of the Target Group
    Value: !Ref WebAppTargetGroup
    Export:
      Name: !Sub ${AWS::StackName}-WebAppALBTargetGroup
  ALBSecurityGroupId:
    Description: ID of the ALB Security Group
    Value: !Ref ALBSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-ALBSecurityGroupId